{"version":3,"sources":["../../../src/spi/dataTypes/CodeableConceptDt.js"],"names":["CodeableConceptDt","root","coding","text","newValue","push","CodingDt","length","addCoding","myCoding","Array","newVal","myText","String","Object"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,iB;;;;;AACjB,6BAAYC,IAAZ,EAAiB;AAAA;;AAAA;;AACb;;AAEA,QAAG,8BAAQA,IAAR,CAAH,EAAiB;AACb,YAAKC,MAAL,GAAYD,IAAI,CAACC,MAAjB;AACA,YAAKC,IAAL,GAAUF,IAAI,CAACE,IAAf;AACH;;AANY;AAQhB;;;;8BAcSC,Q,EAAS;AACf,UAAG,8BAAQA,QAAR,CAAH,EAAqB;AACjB,aAAKF,MAAL,CAAYG,IAAZ,CAAiBD,QAAjB;AACH,OAFD,MAEK;AACD,aAAKF,MAAL,CAAYG,IAAZ,CAAiB,IAAIC,kBAAJ,EAAjB;AACH;;AACD,aAAO,IAAP;AACH;;;wCAEkB;AACf,UAAG,KAAKJ,MAAL,CAAYK,MAAZ,IAAoB,CAAvB,EAAyB;AACrB,aAAKC,SAAL;AACH;;AACD,UAAG,OAAO,KAAKN,MAAL,CAAY,CAAZ,CAAP,KAAwB,UAA3B,EAAsC;AAClC,aAAKA,MAAL,CAAY,CAAZ,IAAe,IAAII,kBAAJ,CAAa,KAAKJ,MAAL,CAAY,CAAZ,CAAb,CAAf;AACH;;AACD,aAAO,KAAKA,MAAL,CAAY,CAAZ,CAAP;AACH;;;wBA7BW;AACR,UAAG,CAAC,8BAAQ,KAAKO,QAAb,CAAJ,EAA2B;AACvB,aAAKA,QAAL,GAAc,IAAIC,KAAJ,EAAd;AACH;;AACD,aAAO,KAAKD,QAAZ;AACH,K;sBAEUE,M,EAAO;AACd,WAAKF,QAAL,GAAcE,MAAd;AACA,aAAO,IAAP;AACH;;;wBAqBS;AACN,UAAG,CAAC,8BAAQ,KAAKC,MAAb,CAAJ,EAAyB;AACrB,aAAKA,MAAL,GAAY,IAAIC,MAAJ,EAAZ;AACH;;AAED,aAAO,KAAKD,MAAZ;AAEH,K;sBAEQD,M,EAAO;AACZ,WAAKC,MAAL,GAAYD,MAAZ;AACA,aAAO,IAAP;AACH;;;;mBAtD0CG,M","sourcesContent":["import {isUndefined,isValid} from '../utils/ValidationRules.js';\nimport {CodingDt} from './CodingDt.js';\n\nexport default class CodeableConceptDt extends Object{\n    constructor(root){\n        super();\n\n        if(isValid(root)){\n            this.coding=root.coding;\n            this.text=root.text;\n        }\n\n    }\n\n    get coding(){\n        if(!isValid(this.myCoding)){\n            this.myCoding=new Array();\n        }\n        return this.myCoding;\n    }\n\n    set coding(newVal){\n        this.myCoding=newVal;\n        return this;\n    }\n\n    addCoding(newValue){\n        if(isValid(newValue)){\n            this.coding.push(newValue);\n        }else{\n            this.coding.push(new CodingDt());\n        }\n        return this;\n    }\n\n    getCodingFirstRep(){\n        if(this.coding.length<=0){\n            this.addCoding();\n        }\n        if(typeof this.coding[0]!=='codingdt'){\n            this.coding[0]=new CodingDt(this.coding[0]);\n        }\n        return this.coding[0];\n    }\n\n    get text(){ \n        if(!isValid(this.myText)){\n            this.myText=new String();\n        }\n\n        return this.myText;\n\n    }\n\n    set text(newVal){\n        this.myText=newVal;\n        return this;\n    }\n}\n"],"file":"CodeableConceptDt.js"}