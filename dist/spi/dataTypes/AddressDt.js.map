{"version":3,"sources":["../../../src/spi/dataTypes/AddressDt.js"],"names":["AddressDt","root","use","type","text","line","city","district","state","postalCode","country","period","myUse","String","AddressUseEnum","getByValue","newValue","myType","AddressTypeEnum","myText","myLine","Array","isArray","myCity","myDistrict","myDistrictmyUse","myState","myPostalCode","myCountry","myPeriod","PeriodDt","Object"],"mappings":"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","sourcesContent":["import {isUndefined,isValid,isEmptyArray,isEmpty} from '../utils/ValidationRules.js';\nimport PeriodDt from './PeriodDt.js';\nimport AddressTypeEnum from '../valueSets/AddressTypeEnum.js';\nimport AddressUseEnum from '../valueSets/AddressUseEnum.js';\n\nexport class AddressDt extends Object{\n    constructor(root){\n        super();\n\n        if(isValid(root)){\n            this.use=root.use;\n            this.type=root.type;\n            this.text=root.text;\n            this.line=root.line;\n            this.city=root.city;\n            this.district=root.district;\n            this.state=root.state;\n            this.postalCode=root.postalCode;\n            this.country=root.country;\n            this.period=root.period;\n        }\n\n    }\n\n    get use(){\n        if(!isValid(this.myUse)){\n            this.myUse=new String();\n        }\n        return AddressUseEnum.getByValue(this.myUse);\n    }\n\n    set use(newValue){\n        this.myUse=newValue;\n        return this.myUse;\n    }\n\n    get type(){\n        if(!isValid(this.myType)){\n            this.myType=new String();\n        }\n        return AddressTypeEnum.getByValue(this.myType);\n    }\n\n    set type(newValue){\n        this.myType=newValue;\n        return this;\n    }\n\n    get text(){\n        if(!isValid(this.myText)){\n            this.myText=new String();\n        }\n        return this.myText;\n    }\n\n    set text(newValue){\n        this.myText=newValue;\n        return this;\n    }\n\n    get line(){\n        if(!isValid(this.myLine) || !Array.isArray(this.myLine)){\n            this.myLine=new Array();\n        }\n        return this.myLine;\n    }\n\n    set line(newValue){\n        this.myLine=newValue;\n        return this;\n    }\n\n    get city(){\n        if(!isValid(this.myCity)){\n            this.myCity=new String();\n        }\n        return this.myCity;\n    }\n\n    set city(newValue){\n        this.myCity=newValue;\n        return this;\n    }\n\n    get district(){\n        if(!isValid(this.myDistrict)){\n            this.myDistrict=new String();\n        }\n        return this.myDistrictmyUse;\n    }\n    set district(newValue){\n        this.myDistrict=newValue;\n        return this;\n    }\n    get state(){\n        if(!isValid(this.myState)){\n            this.myState=new String();\n        }\n        return this.myState;\n    }\n    set state(newValue){\n        this.myState=newValue;\n        return this;\n    }\n\n    get postalCode(){\n        if(!isValid(this.myPostalCode)){\n            this.myPostalCode=new String();\n        }\n        return this.myPostalCode;\n    }\n\n    set postalCode(newValue){\n        this.myPostalCode=newValue;\n        return this;\n    }\n\n    get country(){\n        if(!isValid(this.myCountry)){\n            this.myCountry=new String();\n        }\n        return this.myCountry;\n    }\n\n    set country(newValue){\n        this.myCountry=newValue;\n        return this;\n    }\n\n    get period(){\n        if(!isValid(this.myPeriod)){\n            this.myPeriod=new PeriodDt();\n        }\n        return new PeriodDt(this.myPeriod);\n    }\n\n    set period(newValue){\n        this.myPeriod=newValue;\n        return this;\n    }\n\n    isEmpty(){\n       return isEmpty(this.city) \n       && isEmpty(this.country) \n       && isEmpty(this.district)\n       && isEmptyArray(this.line)\n       && isEmpty(this.use)\n       && isEmpty(this.postalCode)\n       && isEmpty(this.state)\n       && isEmpty(this.text);\n    }\n\n\n}\n"],"file":"AddressDt.js"}