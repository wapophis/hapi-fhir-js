{"version":3,"sources":["../../src/spi/Resource.js"],"names":["FHIResource","rootObject","myId","String","myResourceName","myExtensions","Array","myContainedResources","myLanguaje","id","resourceName","resourceType","extensions","contained","languaje","extensionUri","_searchExtensionByName","resourceReference","push","extension","url","Object","newId","newResourceName","arrayExtension","isArray","arrayContained","newLanguaje"],"mappings":"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","sourcesContent":["import {isValid,isEmpty,isEmptyArray} from '../utils/ValidationRules.js';\n\nexport const FHIResource= class FHIResource extends Object{\n \n    constructor(rootObject){\n        super();\n        this.myId=new String();\n        this.myResourceName=new String();\n        this.myExtensions=new Array();\n        this.myContainedResources=new Array();\n        this.myLanguaje=new String();\n\n        if(isValid(rootObject)){\n            this.id=rootObject.id;\n            this.resourceName=rootObject.resourceType;\n            this.extensions=rootObject.extensions;\n            this.contained=rootObject.contained;\n            this.languaje=rootObject.languaje;\n        }\n    }\n\n    get id(){\n        if(!isValid(this.myId)){\n            this.myId=new String();\n        }\n        return this.myId;\n    }\n\n    set id(newId){\n        if(isValid(this.myId) && isValid(newId)){\n            this.myId=newId;\n        }\n        return this;\n    }\n\n    isEmpty(){\n        return isEmptyArray(this.contained)\n        && isEmptyArray(this.extensions)\n        && isEmpty(this.id);\n    }\n\n    get resourceName(){\n        if(!isValid(this.myResourceName)){\n            this.myResourceName=new String();\n        }\n        return this.myResourceName;\n    }\n\n    set resourceName(newResourceName){\n        if(isValid(this.myResourceName) && isValid(newResourceName)){\n            this.myResourceName=newResourceName;\n        }\n\n        return this;\n    }\n    get extensions(){\n        if(!isValid(this.myExtensions)){\n            this.myExtensions=new Array();\n        }\n\n        return this.myExtensions;\n    }\n\n    set extensions(arrayExtension){\n        if(Array.isArray(arrayExtension) && isValid(arrayExtension)){\n            this.myExtensions=arrayExtension;\n        }\n        return this;\n    }\n\n    getNamedExtension(extensionUri){\n        if(isValid(extensionUri) && isValid(this.myExtensions)){\n            return this._searchExtensionByName(extensionUri);    \n        }\n    }\n\n    get contained(){\n        if(!isValid(this.myContainedResources)){\n            this.myContainedResources=new Array();\n        }\n\n        return this.myContainedResources;\n    }\n\n    set contained(arrayContained){\n        if(Array.isArray(arrayContained) && isValid(arrayContained)){\n            this.myContainedResources=arrayContained;\n        }\n        return this;\n    }\n\n    get languaje(){\n        if(!isValid(this.myLanguaje)){\n            this.myLanguaje=new String();\n        }\n\n        return this.myLanguaje;\n    }\n\n\n\n    set languaje(newLanguaje){\n        if(isValid(this.myLanguaje) && isValid(newLanguaje)){\n            this.myLanguaje=newLanguaje;\n        }\n\n        return this;\n    }\n\n\n    _addContainedResource(resourceReference){\n        if(isValid(resourceReference)){\n            this.contained.push(resourceReference);\n        }\n\n        return this;\n    }\n\n\n\n    _searchExtensionByName(extensionUri){\n        for(let extension in this.myExtensions){\n            if(isValid(extension) && extension.url===extensionUri){\n                return extension;\n            }\n        }\n\n        return new Object();\n    }\n}"],"file":"Resource.js"}